import java.util.*;
import java.lang.*;
import java.io.*;
public class Main
{
    static node head;
    static node tail;
    public static void addlast(int data)
    {
        node nn=new node(data);
      if(head==null){
          head=nn;
          tail=nn;}
        else{
       tail.next=nn;
       tail=nn;}
       
    }
    public static int length()
    {
        int count=0;
        node curr=head;
        while(curr!=null)
        {
            count=count+1;
            curr=curr.next;
        }
        return count;
    }
    public static void Disply()
    {
        if(head==null)
        return;
        
        node curr=head;
        while(curr!=null)
        {
            System.out.print(curr.data+" ");
         curr=curr.next;
         
        }
        System.out.println();
        
    }
    public static node getAt(node head,int idx)
    {
     if(idx<0||idx>length()-1)
     return null;
     node curr=head;
     for(int i=0;i<idx;i++)
     {
         curr=curr.next;
     }
     return curr;
    }
    
    
    public static node seconMidleIs(node head)
    {
        if(head==null||head.next==null)
        return head;
        node slow=head;
        node first=head;
        while(first!=null&&first.next!=null)
        {
            slow=slow.next;
            first=first.next.next;
        }
        return slow;
    }
     public static node firstMidleIs(node head)
    {
        if(head==null||head.next==null)
        return head;
        node slow=head;
        node first=head;
        while(first.next!=null&&first.next.next!=null)
        {
            slow=slow.next;
            first=first.next.next;
        }
        return slow;
        
    }
    public static node DeleteMidleNode(node head)
    {
        if(head==null)
        {
        return null;}
            if(head.next==null){
                    head.data=-1;
            return head;}
        int l=length();
        l=l/2;
        node curr=head;
        while(l>1)
        {
            curr=curr.next;
            l--;
        }
        curr.next=curr.next.next;
        return head;
    }
    
	public static void main(String[] args) {
	 tail=null;
	 head=null;
Scanner sc=new Scanner(System.in);
                int testcase=sc.nextInt();
                for(int j=0;j<testcase;j++){
int n=sc.nextInt();
for(int i=0;i<n;i++)
{
  int m=sc.nextInt();
  addlast(m);
}
DeleteMidleNode(head);
Disply();

	}
}}



class node 
{
    node next;
    int data;
    public node(int data){
    this.data=data;
    this.next=null;
        
    }
}

